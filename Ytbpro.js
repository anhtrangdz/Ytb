const url = $request.url;

const removeAds = (response) => {
    // üî• Ch·∫∑n t·∫•t c·∫£ c√°c lo·∫°i qu·∫£ng c√°o
    const adKeys = [
        "adPlacements", "playerAds", "midroll", "overlay", "endScreen",
        "paidContentOverlay", "adBreakParams", "adSignals", "adSurvey",
        "adServingData", "promotedContent", "adSlots", "adCues",
        "annotations", "bumper", "preloadAd", "cards", "microformat"
    ];
    adKeys.forEach(key => { if (response[key]) delete response[key]; });

    // üî• Ch·∫∑n qu·∫£ng c√°o khi tua video
    if (response.hasOwnProperty("playbackTracking")) {
        delete response.playbackTracking;
    }

    // üî• Ch·∫∑n qu·∫£ng c√°o cu·ªëi video
    if (response.hasOwnProperty("endscreen")) {
        delete response.endscreen.adParams;
    }

    // üî• Ch·∫∑n qu·∫£ng c√°o d∆∞·ªõi d·∫°ng th·∫ª pop-up trong player
    if (response.hasOwnProperty("cards")) {
        delete response.cards.adPreview;
    }

    // üî• Ch·∫∑n qu·∫£ng c√°o "ƒë∆∞·ª£c t√†i tr·ª£" trong m√¥ t·∫£ video
    if (response.hasOwnProperty("microformat")) {
        delete response.microformat.playerMicroformatRenderer.paidContent;
    }

    return response;
};

const optimizeAudio = (response) => {
    // üîπ T·ªëi ∆∞u ch·∫•t l∆∞·ª£ng √¢m thanh l√™n m·ª©c cao nh·∫•t
    response.streamingData?.formats?.forEach(format => {
        format.audioQuality = "high";
    });
};

const retainSuggestions = (response) => {
    // üîπ Gi·ªØ l·∫°i ƒë·ªÅ xu·∫•t video nh∆∞ng gi·∫£m b·ªõt d·ªØ li·ªáu kh√¥ng c·∫ßn thi·∫øt
    if (!response.hasOwnProperty("trackingParams")) {
        response.trackingParams = "safe-placeholder";
    }
};

// X·ª≠ l√Ω c√°c URL cho c√°c lo·∫°i API kh√°c nhau
if (url.includes("youtubei.googleapis.com/youtubei/v1/player")) {
    let response = JSON.parse($response.body);
    response = removeAds(response);  // Ch·∫∑n qu·∫£ng c√°o
    optimizeAudio(response);         // T·ªëi ∆∞u √¢m thanh
    retainSuggestions(response);     // Gi·ªØ l·∫°i ƒë·ªÅ xu·∫•t video
    $done({ body: JSON.stringify(response) });

} else if (url.includes("youtubei.googleapis.com/youtubei/v1/next")) {
    let response = JSON.parse($response.body);
    response = removeAds(response);  // Ch·∫∑n qu·∫£ng c√°o
    // üî• Gi·∫£m t·∫£i d·ªØ li·ªáu kh√¥ng c·∫ßn thi·∫øt ƒë·ªÉ tƒÉng t·ªëc ƒë·ªô load video
    if (response.hasOwnProperty("responseContext")) {
        delete response.responseContext.adSignalsInfo;
    }
    $done({ body: JSON.stringify(response) });

} else if (url.includes("youtubei.googleapis.com/youtubei/v1/browse")) {
    let response = JSON.parse($response.body);
    response = removeAds(response);  // Ch·∫∑n qu·∫£ng c√°o
    $done({ body: JSON.stringify(response) });

} else {
    $done({});
}
